openapi: "3.0.1"
info:
  title: "Toy Credential Issuer Public Api"
  version: "1.0"

paths:
  /token:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - "grant_type"
                - "code"
                - "client_assertion_type"
                - "client_assertion"
                - "redirect_uri"
              properties:
                grant_type:
                  type: "string"
                  pattern: "authorization_code"
                  example: "authorization_code"
                code:
                  type: "string"
                  minLength: 1
                client_assertion_type:
                  type: "string"
                  pattern: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
                  example: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
                client_assertion:
                  type: "string"
                  pattern: "[a-zA-Z0-9_=]+\\.[a-zA-Z0-9_=]+\\.[a-zA-Z0-9_\\-\\+\\/=]+"
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0dCIsImlhdCI6MTUxNjIzOTAyMn0.SbcN-ywpLObhMbbaMCtW1Un8LYhQzHsEth9LvTk4oQQ"
                redirect_uri:
                  type: "string"
                  format: "uri"
                  example: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
            examples:
              example1:
                summary: 201 path
                value:
                  grant_type: "string"
                  code: "981bb74c-3b5e-462e-ba3a-abf868e5da68"
                  client_assertion_type: "string"
                  client_assertion: "string"
                  redirect_uri: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
              example2:
                summary: 400 path
                value:
                  grant_type: "string"
                  code: "bad400"
                  client_assertion_type: "string"
                  client_assertion: "string"
                  redirect_uri: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
              example3:
                summary: 500 path
                value:
                  grant_type: "string"
                  code: "string"
                  client_assertion_type: "string"
                  client_assertion: "string"
                  redirect_uri: "string"
      responses:
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key:
            Fn::If:
              - IsNotDevEnvironment
              - []
              - Ref: AWS::NoValue
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${CommonStackName}-AccessTokenFunctionTS/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /credential/issue:
    post:
      summary: Resource for the KBV API
      description: >-
        This API is expected to be called by the IPV core backend directly as the
        final part of the OpenId/Oauth Flow
      parameters:
        - in: header
          name: Authorization
          description: "A valid access_token (e.g.: Authorization: Bearer access-token-value)."
          schema:
            type: string
            format: string
          required: true
          examples:
            example1:
              summary: "HTTP 200"
              value: "Bearer d035dbfb-64a4-4cb6-940d-f0a3d0953363"
            example2:
              summary: "HTTP 400"
              value: "Bearer bad400"
            example3:
              summary: "HTTP 500"
              value: "Bearer bad500"
      responses:
        "200":
          description: 200 Ok
          content:
            application/jwt:
              schema:
                type: string
                format: application/jwt
                pattern: ^([a-zA-Z0-9_=]+)\.([a-zA-Z0-9_=]+)\.([a-zA-Z0-9_\-\+\/=]+)$
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        "400":
          description: 400 Bad Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 500 Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key:
            Fn::If:
              - IsNotDevEnvironment
              - []
              - Ref: AWS::NoValue
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IssueCredentialFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"

components:
  schemas:
    TokenResponse:
      title: AccessToken
      required:
        - "access_token"
        - "expires_in"
      type: "object"
      properties:
        access_token:
          type: string
          description: The Access Token for the given token request
          example: "d035dbfb-64a4-4cb6-940d-f0a3d0953363"
        token_type:
          type: string
          description: The Token Type issued
          example: Bearer
        expires_in:
          type: string
          description: The expiry time, in seconds
          example: "3600"
        refresh_token:
          type: string
          description: The refresh token is optional, not currently applicable
    Error:
      title: "Error Schema"
      type: "object"
      properties:
        message:
          type: "string"

  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"

x-amazon-apigateway-request-validators:
  Validate both:
    validateRequestBody: true
    validateRequestParameters: true
  Validate Param only:
    validateRequestParameters: true
    validateRequestBody: false
